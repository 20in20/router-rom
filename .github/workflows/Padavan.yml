# This is a basic workflow that is manually triggered

#name: Padavan固件编译
name: Padavan编译

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    #inputs:
      #name:
        # Friendly description to be shown in the UI instead of 'name'
        #description: '路由器目标'
        # Default value if no value is explicitly provided
        #default: 'K2P'
        # Input has to be provided for the workflow to run
        #required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  padavan:
    # The type of runner that the job will run on ubuntu-latest
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: 开始自动编译 K2P 和 K2
      run: |
        echo "目标 ${{ github.event.inputs.name }}"
        pwd
      
    - name: 生成版本号
      run: |
        echo "统一版本号"
        VERSION=$(TZ='Asia/Shanghai' date +%Y%m%d.%H%M)
        echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
        # $GITHUB_ENV变量必须要在下一个流程才生效
        echo "DIR=/opt/rt-n56u" >> $GITHUB_ENV

    - name: 创建目录
      run: |
        echo ${{ env.RELEASE_VERSION }}
        mkdir -p ${{ env.DIR }}
        sudo mkdir -p /opt/images/
        sudo chmod 777 /opt/images/
        
        echo 开始编译时间 >> /opt/images/readme.txt
        TZ='Asia/Shanghai'  date  '+%Y-%m-%d %H:%M:%S' >> /opt/images/readme.txt
        
        
    - name: 准备编译环境
      if: true
      run: | 
        sudo apt install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd \
        fakeroot kmod cpio git python3-docutils gettext automake autopoint \
        texinfo build-essential help2man pkg-config zlib1g-dev libgmp3-dev \
        libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget libc-dev-bin  > /dev/null
  
    - name: 下载源码,从hanwckf
      run: |
        git clone --depth=1 https://github.com/hanwckf/rt-n56u.git ${{ env.DIR }}  > /dev/null
        cd ${{ env.DIR }}/toolchain-mipsel
        sh dl_toolchain.sh > /dev/null
     
        pwd
    
    - name: 开始编译 K2P
      if: true
      env: 
        TNAME: K2P
      run: |
        echo configs/templates/${TNAME}.config
        cd ${{ env.DIR }}/trunk
  
        sudo ./clear_tree || echo 
        sudo ./build_firmware_modify ${TNAME}    > /dev/null
        ls -l images
        sudo mv -f images/*.trx /opt/images/

    - name: 开始编译 K2, 也就是PSG1218
      if: true
      env: 
        TNAME: PSG1218
      run: |
        echo configs/templates/${TNAME}.config
        cd ${{ env.DIR }}/trunk
  
        sudo ./clear_tree || echo 
        sudo ./build_firmware_modify ${TNAME}    > /dev/null
        ls -l images
        sudo mv -f images/*.trx /opt/images/
      
    - name: 收集信息
      if: true
      run: |
        cd /opt/images
        #记录一个版本号
        echo 完成编译时间 >> /opt/images/readme.txt
        TZ='Asia/Shanghai'  date  '+%Y-%m-%d %H:%M:%S' >> /opt/images/readme.txt
        echo 编译版本 >> /opt/images/readme.txt
        
        pushd ${{ env.DIR }}
        git ls-remote --get-url origin >> /opt/images/readme.txt
        git log -1 >> /opt/images/readme.txt
        popd
        
        echo md5校验值 >> /opt/images/readme.txt
        cd /opt/images
        #测试
        md5sum *.trx >> /opt/images/readme.txt || echo
        ls -l
        
        
    - name : 上传编译的固件,到临时目录
      uses: actions/upload-artifact@master
      if: true
      with:
        name: 固件下载
        path: /opt/images
        
    - name: 发布到Release
      if: true
      uses: softprops/action-gh-release@59c3b4891632ff9a897f99a91d7bc557467a3a22
      with:
        name: K2P+K2_${{ env.RELEASE_VERSION }}
        tag_name: ${{ env.RELEASE_VERSION }}
        body_path: /opt/images/readme.txt
        draft: false
        prerelease: false
        files: /opt/images/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
