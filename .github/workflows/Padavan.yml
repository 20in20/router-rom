# This is a basic workflow that is manually triggered

name: Padavan固件编译工作流

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: '路由器目标'
        # Default value if no value is explicitly provided
        default: 'K2P'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  padavan:
    # The type of runner that the job will run on ubuntu-latest
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: 开始
      run: echo "目标 ${{ github.event.inputs.name }}"
      
    - name: 准备编译环境
      run: | 
        echo sudo apt install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd \
        fakeroot kmod cpio git python3-docutils gettext automake autopoint \
        texinfo build-essential help2man pkg-config zlib1g-dev libgmp3-dev \
        libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget libc-dev-bin  > /dev/null
  
    - name: 下载源码,从hanwckf
      run: |
        git clone --depth=1 https://github.com/hanwckf/rt-n56u.git /opt/rt-n56u  > /dev/null
        cd /opt/rt-n56u/toolchain-mipsel
        sh dl_toolchain.sh > /dev/null
        sudo mkdir -p /opt/images/
        sudo chmod 777 /opt/images/
        pwd
    
    - name: 生成版本号
      run: |
        echo "统一版本号"
        VERSION=$(date -d "8 hour" -u +%y%m%d.%H)
        echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
        
    - name: 开始编译 
      env: 
        TNAME: "${{ github.event.inputs.name }}"
      run: |
        echo configs/templates/${TNAME}.config
        cd /opt/rt-n56u/trunk
  
        #sudo ./clear_tree || echo 
        #sudo ./build_firmware_modify ${{ github.event.inputs.name }}    > /dev/null
        #ls -l images
        #sudo mv -f images/*.trx /opt/images/
        
        #记录一个版本号
        echo 编译时间 >> /opt/images/readme.txt
        date >> /opt/images/readme.txt
        echo 编译版本 >> /opt/images/readme.txt
        git log -1 >> /opt/images/readme.txt
        echo 校验值 >> /opt/images/readme.txt
        cd /opt/images
        #测试
        echo > text.trx
        md5sum *.trx >> /opt/images/readme.txt
        ls -l
        
        
    - name : 上传编译的固件
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: Padavan-Images
        path: /opt/images
        
    - name: 发布到Release
      uses: softprops/action-gh-release@59c3b4891632ff9a897f99a91d7bc557467a3a22
      with:
        name: K2P+K2_${{ env.RELEASE_VERSION }}
        tag_name: ${{ env.RELEASE_VERSION }}
        body_path: /opt/images/readme.txt
        draft: false
        prerelease: false
        files: /opt/images/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
